datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  boleta    String   @unique
  name      String
  firstName String
  lastNameP String
  lastNameM String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())

  // Soft delete
  isActive Boolean @default(true)
  deletedAt DateTime?

  qrPasses   QRPass[]
  accessLogs AccessLog[] @relation("AccessByUser")
  guardLogs  AccessLog[] @relation("ValidatedByGuard")
}


enum Role {
  ADMIN
  USER
  GUARD
}

model QRPass {
  id        Int       @id @default(autoincrement())
  code      String    @unique
  userId    Int
  user      User      @relation(fields: [userId], references: [id])
  status    QRStatus  @default(ACTIVE)
  expiresAt DateTime?
  createdAt DateTime  @default(now())

  // navegación inversa opcional
  logs AccessLog[]

  @@index([code])
}

enum QRStatus {
  ACTIVE
  USED
  REVOKED
  EXPIRED
}

model AccessLog {
  id        Int       @id @default(autoincrement())

  // Relación al dueño del acceso (usuario del QR)
  userId    Int
  user      User      @relation("AccessByUser", fields: [userId], references: [id])

  // Relación al QR
  qrId      Int?
  qr        QRPass?   @relation(fields: [qrId], references: [id])

  action    AccessType

  // Relación al guardia que valida
  guardId   Int?
  guard     User?     @relation("ValidatedByGuard", fields: [guardId], references: [id])

  createdAt DateTime  @default(now())
}

enum AccessType {
  ISSUE
  VALIDATE_ALLOW
  VALIDATE_DENY
}
